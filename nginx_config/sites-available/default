##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

#upstream backend {
#	server 192.168.0.51:5000;
#	server 192.168.0.51:7000;
#	#server 192.168.0.111:5000;
#	#server 192.168.0.111:6000;
#	#server 192.168.0.111:7000;
#	#server 127.0.0.1:5000 weight=2;
#	#server 127.0.0.1:6000;
#	#server 127.0.0.1:7000;
#	#server 192.168.0.2:5000;
#	#server 192.168.0.2:7000;
#	#server 192.168.0.2:8000;
#}

server {
	listen 8080 default_server;
	listen [::]:8080 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

#	error_page 401 = @handle_redirects;
#	location @error401 {
#		#return 302 $upstream_http_location;
#        	return 302 http://localhost:5000/account/login?returnUrl%3D%2Fconnect%2Fauthorize%2Flogin%3Fclient_id%3Dmvc.hybrid%26redirect_uri%3Dhttp%253A%252F%252Flocalhost%252Findex.html%26response_type%3Dcode%2520id_token%26scope%3Dopenid%2520profile%2520email%2520api1%2520offline_access%26response_mode%3Dform_post%26nonce%3D636346851747860400.Y2ZhMjQwNjAtMTYzMC00MDljLWI1OGQtZmQyMTM4MzUzNTRlYTM2MzNkODUtMzAwZi00ZDhiLWFkMmItMTUyNmFjNGQ2OWNm%26state%3DCfDJ8OpZsCgdNnpEkscG0vL1JF2rX7Ejtu5ekrM33svYqYkV48eZIELe53aAI7g4luGDycGaCa8x0PX056MK1mPHrdXSZSADCTyyIASJxuPj1FaHbbM2llG1CVr-UmN3g6We9U9tepBiaWrhY_d7hb2SRbb0-jpEGbXgEJxch8B2s9GQIvgX7VJfr8Ux4Mwbn1zf9qt9er5U8XaPT52JkCHGf5kaB_yRTY5CJzBSy0iZ4-QfHSrPaJo2mhpLufkRFdcFTu_libCxr0xuPgAw_5Usj7e_THCtK31XtYJsTslOLKWcQSXf6x3SErOh-1SCZzXzxDMrq1h9DWdYyhXabPPrxQQ;
#	}
	
#	error_page 301 302 307 500 = @error401;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name pro-itech.ru;

#	location / {
#		proxy_pass http://backend;
#	}

	include /etc/nginx/apps_conf/*.conf;

#	location /test {
#		# First attempt to serve request as file, then
#		# as directory, then fall back to displaying a 404.
#		auth_request /connect/authorize;
#		#auth_request /account/login;
#		proxy_pass https://www.google.ru/;
##		try_files $uri $uri/ =404;
#	}
#	
#	location = /connect/authorize {
#	#location = /account/login {
#		internal;
#		proxy_pass http://localhost:5000;
#		proxy_pass_request_body off;
#		proxy_set_header Content-Length "";
#		proxy_set_header X-Original-URI $request_uri;
#		proxy_set_header Host $http_host;
#		proxy_set_header X-Real-IP $remote_addr;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		proxy_set_header X-Forwarded-Proto $scheme;
#
#		set $args $args&client_id=mvc.hybrid&redirect_uri=http://localhost/index.html&response_type=code%20id_token&scope=openid%20profile%20email%20api1%20offline_access&response_mode=form_post&nonce=636346861770054890.OGMxMGNlYmQtOTU0NS00ZjM4LThlNzYtOTZmNjFkNTQ4YzBhNTZhZTk1MzItNTQ0Mi00MzI5LWJjZWUtYmI2OWQ0YWYwOTUz&state=CfDJ8OpZsCgdNnpEkscG0vL1JF2DS5wdeAuVtH6pxJApe3J6N9ApjFNkSIYhXMS8mRtzbtgTlPbVxyLTiQeCp22tbR_VuwvGS_rkkGWGl1WYulVaz9mDmo0qZ410BcZAy3Zg5B7aEW0Ns82SL0ouco6Jm_hDpX3ICfV2br1CWKIET9yEMvfkygZA2CX31DZSlRJyx8QHVtNj8wa1mAPQPXwjiHDsoWo9USGb2tQ2400_IBZr3lI8PlX7Q9sC-8wBLDomiwbKLkzonnpykmJwGj9fLjEPYqGnJtbVTsW1gclbDJUtxv6WSk5pcY_NKzk0NKJq5JGvXDqlSux_AwcBQpUsklo;
#
#		#set $args $args&client_id=js_oauth&redirect_uri=http://localhost/index.html&response_type=token&scope=api1&state=12321342342;
#
#		if ($http_cookie ~* "shopware_sso_token=([^;]+)(?:;|$)") {
#			set $token "$1";
#		}
#		proxy_set_header X-SHOPWARE-SSO-Token $token;
#	}
#
#	location @handle_redirects {
#		#store the current state of the world so we can reuse it in a minute
#		# We need to capture these values now, because as soon as we invoke 
#		# the proxy_* directives, these will disappear
#		set $original_uri $uri;
#		set $orig_loc $upstream_http_location;
#		
#
#		# nginx goes to fetch the value from the upstream Location header
#		proxy_pass $orig_loc;
#		#proxy_cache       steam;
#		## But we store the result with the cache key of the original request URI
#		## so that future clients don't need to follow the redirect too
#		#proxy_cache_key $original_uri;
#		#proxy_cache_valid 200 206 3000h;
#	}



	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php7.0-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php7.0-fpm:
	#	fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
